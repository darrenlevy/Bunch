var gameLogic;!function(a){function b(){return[c(),c(),c()]}function c(){for(var b=[],c=[],h=0;h<a.DECK_SIZE;h++){var i=[],j="";do i=[d(),e(),f(),g()],j=i[0]+i[1]+i[2]+i[3];while(-1!==c.indexOf(j));c[h]=j,b[h]=i}return b}function d(){var b=["♡","✰","☺"],c=Math.floor(100*Math.random()%a.NUMBER_OF_TYPES);return b[c]}function e(){var b=Math.floor(100*Math.random()%a.NUMBER_OF_TYPES)+1;return String(b)}function f(){var b=["pink","orange","green"],c=Math.floor(100*Math.random()%a.NUMBER_OF_TYPES);return b[c]}function g(){var b=["solid","dotted","double"],c=Math.floor(100*Math.random()%a.NUMBER_OF_TYPES);return b[c]}function h(){return{decks:b(),bunches:[],round:1,scores:[0,0]}}function i(b){return b>a.TOTAL_ROUNDS}function j(a){return a[0]==a[1]?[0,0]:a[0]>a[1]?[1,0]:[0,1]}function k(b,c){var d=10-c>0?10-c:0;if(0===b.length)return d;if(b.length!==a.NUMBER_OF_TYPES)return-1;for(var e=0;e<a.NUMBER_OF_ELEMENTS_PER_CARD;e++){for(var f=[],g=0;g<b.length;g++){var h=b[g][e];-1==f.indexOf(h)&&f.push(h)}if(d+=f.length,1!==f.length&&f.length!==a.NUMBER_OF_TYPES)return-1}return d}function l(b,c,d,e,f,g){if(i(f))throw new Error("Can only make a move if the game is not over!");b||(b=h());for(var l=b.decks[f-1],m=[],n=0;n<c.length;n++)m.push(l[c[n]]);var o=k(m,d);if(0>o)throw new Error("That is not a legal move!");var p=angular.copy(g);p[e]+=o;var q=angular.copy(b.bunches);q.push({cardIndices:c,seconds:d});var r,s=null,t=angular.copy(f);q.length%a.NUMBER_OF_PLAYERS===1?r=1-e:(r=e,t++),i(t)&&(s=j(p),r=-1);var u={decks:b.decks,bunches:q,round:t,scores:p};return{endMatchScores:s,turnIndexAfterMove:r,stateAfterMove:u}}function m(a){var b=a.turnIndexBeforeMove,c=a.stateBeforeMove;c||(c=angular.copy(a.move.stateAfterMove),c.bunches=[],c.round=1,c.scores=[0,0]);var d=a.move,e=a.move.stateAfterMove.bunches,f=e[e.length-1],g=f.cardIndices,h=f.seconds,i=c?c.round:1,j=c?c.scores:[0,0],k=l(c,g,h,b,i,j);if(!angular.equals(d,k))throw new Error("Move calculated="+k.stateAfterMove.scores+", move expected="+d.stateAfterMove.scores)}a.DECK_SIZE=16,a.TOTAL_ROUNDS=3,a.NUMBER_OF_PLAYERS=2,a.NUMBER_OF_ELEMENTS_PER_CARD=4,a.NUMBER_OF_TYPES=3,a.getInitialState=h,a.pointsForMove=k,a.createMove=l,a.checkMoveOk=m}(gameLogic||(gameLogic={}));var game;!function(a){function b(){translate.setTranslations(c()),translate.setLanguage("en"),log.log("Translation of 'RULES_OF_BUNCHES' is "+translate("RULES_OF_BUNCHES")),resizeGameAreaService.setWidthToHeight(1.5),moveService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,checkMoveOk:gameLogic.checkMoveOk,updateUI:f}),document.addEventListener("animationend",d,!1),document.addEventListener("webkitAnimationEnd",d,!1),document.addEventListener("oanimationend",d,!1);var a=window;a.HTMLInspector&&setInterval(function(){a.HTMLInspector.inspect({excludeRules:["unused-classes","script-placement"]})},3e3)}function c(){return{RULES_OF_BUNCHES:{en:"Rules of Bunches",es:"Reglas de Los Manojos"},RULES_SLIDE1:{en:"You and your opponent take turns finding a Bunch. A Bunch is 2 or 3 cards where the number of emoji, color of emoji, the emoji itself and border of the card are all the same or all different.",es:"Usted y su oponente se da vuelta para encontrar un manojo. Un manojo es 2 o 3 cartas donde el número de emoji, el color de emoji, el propio emoji y el borde de la tarjeta son todos iguales o diferentes."},RULES_SLIDE2:{en:"The first player goes, then the second player goes with the same cards for each round. After 3 rounds, the player with the most points wins.",es:"El primer jugador pasa, entonces el segundo jugador va con las mismas cartas para cada ronda. Después de 3 rondas, el jugador con más puntos gana."},CLOSE:{en:"Close",es:"Cerca"}}}function d(){$rootScope.$apply(function(){log.info("Animation ended"),a.animationEnded=!0})}function e(){a.isComputerTurn&&(a.isComputerTurn=!1,moveService.makeMove(aiService.findComputerMove(a.move)))}function f(b){log.info("Game got updateUI:",b),a.animationEnded=!1,a.move=b.move,a.state=a.move.stateAfterMove,a.state||(a.state=gameLogic.getInitialState()),j(a.state.scores),a.canMakeMove=a.move.turnIndexAfterMove>=0&&b.yourPlayerIndex===a.move.turnIndexAfterMove,a.deckIndex=a.canMakeMove?a.state.round-1:a.deckIndex,a.move.turnIndexAfterMove<0&&$interval.cancel(D),a.isComputerTurn=a.canMakeMove&&""===b.playersInfo[b.yourPlayerIndex].playerId,a.isComputerTurn&&(a.canMakeMove=!1,e())}function g(){return a.move.turnIndexAfterMove<0}function h(b){if(a.state&&a.state.bunches.length%2==1){var c=a.state.bunches.length-1,d=a.state.bunches[c];if(d.seconds<=a.seconds&&-1!==d.cardIndices.indexOf(b))return}var e=a.cards.indexOf(b);-1==e?a.cards.push(b):a.cards.splice(e,1),a.cards.length>=3&&l()}function i(b){return a.move.turnIndexAfterMove==b}function j(b){$interval.cancel(D),a.cards=[],a.seconds=0,a.player1Score=b[0],a.player2Score=b[1],D=$interval(function(){a.seconds++},1e3)}function k(){a.cards=[],l()}function l(){if("?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(a.canMakeMove)try{var b=gameLogic.createMove(a.state,a.cards,a.seconds,a.move.turnIndexAfterMove,a.state.round,a.state.scores);a.canMakeMove=!1,moveService.makeMove(b)}catch(c){return log.info(["Invalid cards:",a.cards]),void(a.cards=[])}}function m(b){for(var c="",d=parseInt(a.state.decks[a.deckIndex][b][1]),e=0;d>e;e++)c+=a.state.decks[a.deckIndex][b][0];return c}function n(b){return"green"==a.state.decks[a.deckIndex][b][2]}function o(b){return"pink"==a.state.decks[a.deckIndex][b][2]}function p(b){return"orange"==a.state.decks[a.deckIndex][b][2]}function q(b){return"solid"==a.state.decks[a.deckIndex][b][3]}function r(b){return"dotted"==a.state.decks[a.deckIndex][b][3]}function s(b){return"double"==a.state.decks[a.deckIndex][b][3]}function t(b){if(a.state&&a.state.bunches.length%2==1){var c=a.state.bunches.length-1,d=a.state.bunches[c];if(d.seconds<=a.seconds&&-1!==d.cardIndices.indexOf(b))return-1!==a.cards.indexOf(b)&&a.cards.splice(a.cards.indexOf(b),1),!0}return!1}function u(b){a.resultRound==b&&(a.showResults=!a.showResults),a.resultRound=b}function v(b,c){var d=a.resultRound-1;if(d%2==1&&(b=1-b),a.state.bunches.length<=2*d+b)return!1;if(0==a.state.bunches[2*d+b].cardIndices.length)return!1;var e=a.state.bunches[2*d+b].cardIndices[c];return"green"==a.state.decks[d][e][2]}function w(b,c){var d=a.resultRound-1;if(d%2==1&&(b=1-b),a.state.bunches.length<=2*d+b)return!1;if(0==a.state.bunches[2*d+b].cardIndices.length)return!1;var e=a.state.bunches[2*d+b].cardIndices[c];return"pink"==a.state.decks[d][e][2]}function x(b,c){var d=a.resultRound-1;if(d%2==1&&(b=1-b),a.state.bunches.length<=2*d+b)return!1;if(0==a.state.bunches[2*d+b].cardIndices.length)return!1;var e=a.state.bunches[2*d+b].cardIndices[c];return"orange"==a.state.decks[d][e][2]}function y(b,c){var d=a.resultRound-1;if(d%2==1&&(b=1-b),a.state.bunches.length<=2*d+b)return!1;if(0==a.state.bunches[2*d+b].cardIndices.length)return!1;var e=a.state.bunches[2*d+b].cardIndices[c];return"solid"==a.state.decks[d][e][3]}function z(b,c){var d=a.resultRound-1;if(d%2==1&&(b=1-b),a.state.bunches.length<=2*d+b)return!1;if(0==a.state.bunches[2*d+b].cardIndices.length)return!1;var e=a.state.bunches[2*d+b].cardIndices[c];return"dotted"==a.state.decks[d][e][3]}function A(b,c){var d=a.resultRound-1;if(d%2==1&&(b=1-b),a.state.bunches.length<=2*d+b)return!1;if(0==a.state.bunches[2*d+b].cardIndices.length)return!1;var e=a.state.bunches[2*d+b].cardIndices[c];return"double"==a.state.decks[d][e][3]}function B(b,c){var d="",e=a.resultRound-1;if(e%2==1&&(b=1-b),a.state.bunches.length<=2*e+b)return"";if(0==a.state.bunches[2*e+b].cardIndices.length)return"";for(var f=a.state.bunches[2*e+b].cardIndices[c],g=parseInt(a.state.decks[e][f][1]),h=0;g>h;h++)d+=a.state.decks[e][f][0];return d}function C(b){return b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.isHelpModalShown=!1),!0}a.animationEnded=!1,a.canMakeMove=!1,a.isComputerTurn=!1,a.move=null,a.state=null,a.isHelpModalShown=!1,a.cards=[],a.seconds=0,a.player1Score=0,a.player2Score=0,a.deckIndex=0,a.resultRound=1;var D;a.showResults=!1,a.init=b,a.gameIsOver=g,a.cardClicked=h,a.isCurrentPlayerIndex=i,a.passMove=k,a.submitMove=l,a.getEmoji=m,a.isGreen=n,a.isPink=o,a.isOrange=p,a.isSolid=q,a.isDotted=r,a.isDouble=s,a.shouldFlip=t,a.resultRoundClicked=u,a.resultIsGreen=v,a.resultIsPink=w,a.resultIsOrange=x,a.resultIsSolid=y,a.resultIsDotted=z,a.resultIsDouble=A,a.getResultEmoji=B,a.clickedOnModal=C}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,game.init()});var aiService;!function(a){function b(a){return d(a,{millisecondsLimit:1e3})}function c(a,b){for(var c=10,d=[],e=0;e<gameLogic.DECK_SIZE;e++)for(var f=e+1;f<gameLogic.DECK_SIZE;f++)for(var g=f+1;g<gameLogic.DECK_SIZE;g++)try{if(a.bunches.length%2==1&&a.bunches[a.bunches.length-1].cardIndices.sort()==[e,f,g].sort())continue;var h=a.decks[a.round-1],i=h[e],j=h[f],k=h[g],l=gameLogic.pointsForMove([i,j,k],c);l>=0&&d.push(gameLogic.createMove(a,[e,f,g],c,b,a.round,a.scores))}catch(m){}return 0==d.length&&d.push(gameLogic.createMove(a,[],c,b,a.round,a.scores)),d}function d(a,b){var c=e(a,a.turnIndexAfterMove);return c[c.length-1]}function e(a,b){return c(a.stateAfterMove,b)}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map